apiVersion: apps/v1
kind: Deployment               
metadata:
  name: mongo-reporter           
spec:
  replicas: 1              
  selector:
    matchLabels:
      app: mongo-reporter
  template:                   
    metadata:
      labels:
        app: mongo-reporter 
    spec:
      # securityContext and initContainers are only to prevent MongoDB failing on permission errors
      # Running as known UID filesystem GID and setting /data/mongodb directory with those rights
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      initContainers:
      - name: change-ownership-container
        image: busybox
        command: ["/bin/chown","-R","1000:1000", "/data/mongodb"]
        securityContext:
          runAsUser: 0
          privileged: true
        volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data/mongodb"
      volumes:
      - name: "mongo-data-dir"
        persistentVolumeClaim:
          claimName: "mongo-data-pvc"
      containers:
      - name: mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        args: ["--dbpath","/data/mongodb"]
        livenessProbe:
          exec:
            command:
              - mongosh
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - mongosh
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        envFrom:
        - secretRef:
            name: mongo-secrets
        ports:
          - containerPort: 27017
        volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data/mongodb"

